/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import BaseDeDatos.DBA;
import Cuentas.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlos
 */
public class MovimientosMySQL extends javax.swing.JFrame {

    /**
     * Creates new form MovimientosMySQL
     */
    String usuario="root";
        String password="123456";
        
    DefaultTableModel tabla2;
    static String NumeroCuenta="1001";
    static boolean tipoConec=true;
    
     String [] registros1=new String[7];
        String [] titulos1 ={"Cedula","Nombre","Cuenta NÂ°","Tipo Cuenta","Saldo","Interes","totalSaldo"};
        Cuentas cdt1=new Cdt();
    Cuentas Ahor=new CuentaAhorros();
    Cuentas Corr=new CuentaCorriente();
    String tipoMovi="";
    
    DBA con1=new DBA();
    public MovimientosMySQL(String str,boolean con) {
        NumeroCuenta=str;
        tipoConec=con;
        setTitle("Banco Arcoiris-consulta clientes-CArlos Orjuela");
        initComponents();
        cargar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Valores");

        jTextField1.setText("0");

        jButton1.setText("Realizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Deposito", "Retiro" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Actualizar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)))
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(243, 243, 243))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       String l=String.valueOf(jComboBox1.getSelectedItem());
        
        if(l.equals("Deposito")){
            jLabel2.setText("1");
        }
        if(l.equals("Retiro")){
            jLabel2.setText("2");
        }
       
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //no se le olvide hacer la ***** conexion
        
        if(tipoConec){
                con1.conexionSql();
        con1.Realizarmovimiento(jLabel2.getText(), jTextField1.getText(), NumeroCuenta);
        }else{
                con1.conexionAcces();
        con1.Realizarmovimiento(jLabel2.getText(), jTextField1.getText(), NumeroCuenta);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        cargar();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovimientosMySQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovimientosMySQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovimientosMySQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovimientosMySQL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MovimientosMySQL(NumeroCuenta,tipoConec).setVisible(true);
            }
        });
    }
    public void cargar(){
        if(tipoConec){
    jLabel1.setText("Valor");
    tabla2= new DefaultTableModel(null,titulos1);
    double saldo_total=0;
               double interes=0;
               
                double cuenta=0;
         try{
             
                    // Carga el driver
                    Class.forName("com.mysql.jdbc.Driver");
                    // Define la cadena de conexiÃ³n
                    String sourceURL = "jdbc:mysql://localhost/banco";

                    // Crea el objeto connection a travÃ©s de DriverManager
                    Connection con = DriverManager.getConnection(sourceURL,usuario, password);
                    System.out.println("La conexion MySQL establecida es: "+ con);
                    Statement s = con.createStatement();
                    String sql="SELECT * FROM Cliente INNER JOIN Cuenta ON Cliente.idCedula = Cuenta.idCedula where numeroCuenta="+NumeroCuenta+";";
                    ResultSet re = s.executeQuery(sql);
    
                            re.next();    
                                            registros1[0]=re.getString("idCedula");
                                            registros1[1]=re.getString("nombreCliente");
                                            registros1[2]=re.getString("numeroCuenta");
                                            registros1[3]=re.getString("idTipoCuenta");
                                            registros1[4]=re.getString("saldo"); 
                                            
                cuenta=Double.parseDouble( registros1[4]);
                if(registros1[3].equals("1")){
                     interes=cuenta*Ahor.calcularInteres();
                     saldo_total=interes+cuenta;
                     registros1[5]=String.valueOf(interes);
                     registros1[6]=String.valueOf(saldo_total);
                            
                 }
                 if(registros1[3].equals("2")){
                     interes=cuenta*Corr.calcularInteres();
                     saldo_total=interes+cuenta;
                     registros1[5]=String.valueOf(interes);
                     registros1[6]=String.valueOf(saldo_total);
                 }
                 if(registros1[3].equals("3")){
                     interes=cuenta*cdt1.calcularInteres();
                     saldo_total=interes+cuenta;
                     registros1[5]=String.valueOf(interes);
                     registros1[6]=String.valueOf(saldo_total);
                 }
                       tabla2.addRow(registros1);
                        
                    jTable1.setModel(tabla2);
                     con.close();
                    //s.close();
                    //re.close();                
            }catch (Exception ex){
            JOptionPane.showMessageDialog(null,"Error"+ ex);
        }
        }else{
        jLabel1.setText("Valor");
    tabla2= new DefaultTableModel(null,titulos1);
    double saldo_total=0;
               double interes=0;
               
                double cuenta=0;
         try{
             
                    // Carga el driver
                    Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                        // Define la cadena de conexiÃ³n
                        String db="jdbc:odbc:Driver=Microsoft Access Driver (*.mdb);DBQ=C:/datos/Database1a.mdb";
                        // Crea el objeto connection a travÃ©s de DriverManager
                        
                    Connection    con = DriverManager.getConnection(db,"","");
                    System.out.println("La conexion MySQL establecida es: "+ con);
                    Statement s = con.createStatement();
                    String sql="SELECT * FROM Cliente INNER JOIN Cuenta ON Cliente.idCedula = Cuenta.idCedula where numeroCuenta="+NumeroCuenta+";";
                    ResultSet re = s.executeQuery(sql);
    
                            re.next();    
                                            registros1[0]=re.getString("idCedula");
                                            registros1[1]=re.getString("nombreCliente");
                                            registros1[2]=re.getString("numeroCuenta");
                                            registros1[3]=re.getString("idTipoCuenta");
                                            registros1[4]=re.getString("saldo"); 
                                            
                cuenta=Double.parseDouble( registros1[4]);
                if(registros1[3].equals("1")){
                     interes=cuenta*Ahor.calcularInteres();
                     saldo_total=interes+cuenta;
                     registros1[5]=String.valueOf(interes);
                     registros1[6]=String.valueOf(saldo_total);
                            
                 }
                 if(registros1[3].equals("2")){
                     interes=cuenta*Corr.calcularInteres();
                     saldo_total=interes+cuenta;
                     registros1[5]=String.valueOf(interes);
                     registros1[6]=String.valueOf(saldo_total);
                 }
                 if(registros1[3].equals("3")){
                     interes=cuenta*cdt1.calcularInteres();
                     saldo_total=interes+cuenta;
                     registros1[5]=String.valueOf(interes);
                     registros1[6]=String.valueOf(saldo_total);
                 }
                       tabla2.addRow(registros1);
                        
                    jTable1.setModel(tabla2);
                     con.close();
                    //s.close();
                    //re.close();                
            }catch (Exception ex){
            JOptionPane.showMessageDialog(null,"Error"+ ex);
        }
        
        
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
